services:
  postgres:
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: adminpass
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./initdb:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"

  prefect-server:
    image: prefecthq/prefect:3.4-python3.12
    command: >
      bash -c "
      pip install 'sqlalchemy[asyncio]' psycopg2-binary prefect-sqlalchemy &&
      prefect server start --host 0.0.0.0"
    ports:
      - "4200:4200"
      - "3000:3000"
    environment:
      PREFECT_UI_URL: http://localhost:4200
    restart: unless-stopped
    depends_on:
      - postgres

  mlflow:
    build:
      context: .
      dockerfile: Dockerfile.mlflow
    ports:
      - "5050:5000" # Not 5000 because it's already in use in my Mac
    volumes:
      - ./mlartifacts:/mlartifacts
    depends_on:
      - postgres
    environment:
      MLFLOW_USER: ${MLFLOW_USER:-mlflow_user}
      MLFLOW_PASS: ${MLFLOW_PASS:-mlflowpass}
    command: >
      bash -c "
      mlflow server
      --host 0.0.0.0
      --port 5000
      --backend-store-uri postgresql://${MLFLOW_USER:-mlflow_user}:${MLFLOW_PASS:-mlflowpass}@postgres:5432/mlflow_db"
    restart: unless-stopped

  flows:
    build:
      context: .
    env_file:
      - .env.docker
    depends_on:
      - mlflow
      - prefect-server
    environment:
      PREFECT_API_URL: http://prefect-server:4200/api
      MLFLOW_TRACKING_URI: http://mlflow:5000
      MLFLOW_USER: ${MLFLOW_USER:-mlflow_user}
      MLFLOW_PASS: ${MLFLOW_PASS:-mlflowpass}
      MYAPP_DB_URL: postgresql://${MLFLOW_USER:-mlflow_user}:${MLFLOW_PASS:-mlflowpass}@postgres:5432/mlflow_db
    volumes:
      - ./data:/app/data
      - ./models:/app/models
      - ./output:/app/output
    restart: on-failure

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    depends_on:
      - postgres
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana_provisioning:/etc/grafana/provisioning

volumes:
  pgdata:
  grafana_data:
